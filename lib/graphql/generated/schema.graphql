schema {
  query: Query
  mutation: Mutation
}

type AAssetDeployments {
  asset: AAssets
  assetId: String1!
  deploymentId: String1!
  id: String1!
  smartContractDeployment: ASmartContractDeployments
}

input AAssetDeploymentsBoolExp {
  _and: [AAssetDeploymentsBoolExp!]
  _not: AAssetDeploymentsBoolExp
  _or: [AAssetDeploymentsBoolExp!]
  asset: AAssetsBoolExp
  assetId: StringBoolExp
  deploymentId: StringBoolExp
  id: StringBoolExp
  smartContractDeployment: ASmartContractDeploymentsBoolExp
}

input AAssetDeploymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [AAssetDeploymentsOrderBy!]
  where: AAssetDeploymentsBoolExp
}

input AAssetDeploymentsOrderBy {
  asset: AAssetsOrderBy
  assetId: OrderBy
  deploymentId: OrderBy
  id: OrderBy
  smartContractDeployment: ASmartContractDeploymentsOrderBy
}

type AAssetStandards {
  definition: String1!
  id: String1!
  name: String1!
  smartContractDeployments(
    limit: Int
    offset: Int
    order_by: [ASmartContractDeploymentsOrderBy!]
    where: ASmartContractDeploymentsBoolExp
  ): [ASmartContractDeployments!]
  smartContractDeploymentsAggregate(
    filter_input: ASmartContractDeploymentsFilterInput
  ): ASmartContractDeploymentsAggExp!
}

type AAssetStandardsAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AAssetStandardsBoolExp {
  _and: [AAssetStandardsBoolExp!]
  _not: AAssetStandardsBoolExp
  _or: [AAssetStandardsBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  smartContractDeployments: ASmartContractDeploymentsBoolExp
}

input AAssetStandardsFilterInput {
  limit: Int
  offset: Int
  order_by: [AAssetStandardsOrderBy!]
  where: AAssetStandardsBoolExp
}

input AAssetStandardsOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AAssetStatuses {
  assets(
    limit: Int
    offset: Int
    order_by: [AAssetsOrderBy!]
    where: AAssetsBoolExp
  ): [AAssets!]
  assetsAggregate(filter_input: AAssetsFilterInput): AAssetsAggExp!
  definition: String1!
  id: String1!
  name: String1!
}

type AAssetStatusesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AAssetStatusesBoolExp {
  _and: [AAssetStatusesBoolExp!]
  _not: AAssetStatusesBoolExp
  _or: [AAssetStatusesBoolExp!]
  assets: AAssetsBoolExp
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
}

input AAssetStatusesFilterInput {
  limit: Int
  offset: Int
  order_by: [AAssetStatusesOrderBy!]
  where: AAssetStatusesBoolExp
}

input AAssetStatusesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AAssetSupportTypes {
  definition: String1!
  id: String1!
  name: String1!
  productAssetRelationships(
    limit: Int
    offset: Int
    order_by: [AProductAssetRelationshipsOrderBy!]
    where: AProductAssetRelationshipsBoolExp
  ): [AProductAssetRelationships!]
  productAssetRelationshipsAggregate(
    filter_input: AProductAssetRelationshipsFilterInput
  ): AProductAssetRelationshipsAggExp!
}

type AAssetSupportTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AAssetSupportTypesBoolExp {
  _and: [AAssetSupportTypesBoolExp!]
  _not: AAssetSupportTypesBoolExp
  _or: [AAssetSupportTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  productAssetRelationships: AProductAssetRelationshipsBoolExp
}

input AAssetSupportTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [AAssetSupportTypesOrderBy!]
  where: AAssetSupportTypesBoolExp
}

input AAssetSupportTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AAssetTypes {
  assets(
    limit: Int
    offset: Int
    order_by: [AAssetsOrderBy!]
    where: AAssetsBoolExp
  ): [AAssets!]
  assetsAggregate(filter_input: AAssetsFilterInput): AAssetsAggExp!
  definition: String1!
  id: String1!
  name: String1!
}

type AAssetTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AAssetTypesBoolExp {
  _and: [AAssetTypesBoolExp!]
  _not: AAssetTypesBoolExp
  _or: [AAssetTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
}

input AAssetTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [AAssetTypesOrderBy!]
  where: AAssetTypesBoolExp
}

input AAssetTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AAssets {
  assetDeployments(
    limit: Int
    offset: Int
    order_by: [AAssetDeploymentsOrderBy!]
    where: AAssetDeploymentsBoolExp
  ): [AAssetDeployments!]
  assetDeploymentsAggregate(
    filter_input: AAssetDeploymentsFilterInput
  ): assetDeploymentsAggExp!
  assetStatus: AAssetStatuses
  assetStatusId: String1
  assetType: AAssetTypes
  assetTypeId: String1
  derivativeAssets(
    limit: Int
    offset: Int
    order_by: [ADerivativeAssetsOrderBy!]
    where: ADerivativeAssetsBoolExp
  ): [ADerivativeAssets!]
  derivativeAssetsAggregate(
    filter_input: ADerivativeAssetsFilterInput
  ): ADerivativeAssetsAggExp!
  derivativeAssetsByBaseAssetId(
    limit: Int
    offset: Int
    order_by: [ADerivativeAssetsOrderBy!]
    where: ADerivativeAssetsBoolExp
  ): [ADerivativeAssets!]
  derivativeAssetsByBaseAssetIdAggregate(
    filter_input: ADerivativeAssetsFilterInput
  ): ADerivativeAssetsAggExp!
  description: String1!
  icon: String1!
  id: String1!
  name: String1!
  productAssetRelationships(
    limit: Int
    offset: Int
    order_by: [AProductAssetRelationshipsOrderBy!]
    where: AProductAssetRelationshipsBoolExp
  ): [AProductAssetRelationships!]
  productAssetRelationshipsAggregate(
    filter_input: AProductAssetRelationshipsFilterInput
  ): AProductAssetRelationshipsAggExp!
  root: ARoots
  rootId: String1!
  ticker: String1!
  urls(
    limit: Int
    offset: Int
    order_by: [AssetUrlsOrderBy!]
    where: AssetUrlsBoolExp
  ): [AssetUrls!]
}

type AAssetsAggExp {
  _count: Int!
  assetStatusId: StringAggExp!
  assetTypeId: StringAggExp!
  description: StringAggExp!
  icon: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
  rootId: StringAggExp!
  ticker: StringAggExp!
}

input AAssetsBoolExp {
  _and: [AAssetsBoolExp!]
  _not: AAssetsBoolExp
  _or: [AAssetsBoolExp!]
  assetDeployments: AAssetDeploymentsBoolExp
  assetStatus: AAssetStatusesBoolExp
  assetStatusId: StringBoolExp
  assetTypeId: StringBoolExp
  derivativeAssets: ADerivativeAssetsBoolExp
  derivativeAssetsByBaseAssetId: ADerivativeAssetsBoolExp
  description: StringBoolExp
  icon: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  productAssetRelationships: AProductAssetRelationshipsBoolExp
  root: ARootsBoolExp
  rootId: StringBoolExp
  ticker: StringBoolExp
}

input AAssetsFilterInput {
  limit: Int
  offset: Int
  order_by: [AAssetsOrderBy!]
  where: AAssetsBoolExp
}

input AAssetsOrderBy {
  assetStatus: AAssetStatusesOrderBy
  assetStatusId: OrderBy
  assetType: AAssetTypesOrderBy
  assetTypeId: OrderBy
  description: OrderBy
  icon: OrderBy
  id: OrderBy
  name: OrderBy
  root: ARootsOrderBy
  rootId: OrderBy
  ticker: OrderBy
}

type ACoreTableNames {
  id: String1!
  tableName: String1!
  urls(
    limit: Int
    offset: Int
    order_by: [AUrlsOrderBy!]
    where: AUrlsBoolExp
  ): [AUrls!]
  urlsAggregate(filter_input: AUrlsFilterInput): AUrlsAggExp!
}

type ACoreTableNamesAggExp {
  _count: Int!
  id: StringAggExp!
  tableName: StringAggExp!
}

input ACoreTableNamesBoolExp {
  _and: [ACoreTableNamesBoolExp!]
  _not: ACoreTableNamesBoolExp
  _or: [ACoreTableNamesBoolExp!]
  id: StringBoolExp
  tableName: StringBoolExp
  urls: AUrlsBoolExp
}

input ACoreTableNamesFilterInput {
  limit: Int
  offset: Int
  order_by: [ACoreTableNamesOrderBy!]
  where: ACoreTableNamesBoolExp
}

input ACoreTableNamesOrderBy {
  id: OrderBy
  tableName: OrderBy
}

type ACountries {
  code: String1!
  entities(
    limit: Int
    offset: Int
    order_by: [AEntitiesOrderBy!]
    where: AEntitiesBoolExp
  ): [AEntities!]
  entitiesAggregate(filter_input: AEntitiesFilterInput): AEntitiesAggExp!
  id: String1!
  name: String1!
}

type ACountriesAggExp {
  _count: Int!
  code: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ACountriesBoolExp {
  _and: [ACountriesBoolExp!]
  _not: ACountriesBoolExp
  _or: [ACountriesBoolExp!]
  code: StringBoolExp
  entities: AEntitiesBoolExp
  id: StringBoolExp
  name: StringBoolExp
}

input ACountriesFilterInput {
  limit: Int
  offset: Int
  order_by: [ACountriesOrderBy!]
  where: ACountriesBoolExp
}

input ACountriesOrderBy {
  code: OrderBy
  id: OrderBy
  name: OrderBy
}

type ADeploymentTypes {
  definition: String1!
  id: String1!
  name: String1!
  smartContractDeployments(
    limit: Int
    offset: Int
    order_by: [ASmartContractDeploymentsOrderBy!]
    where: ASmartContractDeploymentsBoolExp
  ): [ASmartContractDeployments!]
  smartContractDeploymentsAggregate(
    filter_input: ASmartContractDeploymentsFilterInput
  ): ASmartContractDeploymentsAggExp!
}

type ADeploymentTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ADeploymentTypesBoolExp {
  _and: [ADeploymentTypesBoolExp!]
  _not: ADeploymentTypesBoolExp
  _or: [ADeploymentTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  smartContractDeployments: ASmartContractDeploymentsBoolExp
}

input ADeploymentTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [ADeploymentTypesOrderBy!]
  where: ADeploymentTypesBoolExp
}

input ADeploymentTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type ADerivativeAssets {
  asset: AAssets
  assetByBaseAssetId: AAssets
  baseAssetId: String1!
  derivativeAssetId: String1!
  id: String1!
}

type ADerivativeAssetsAggExp {
  _count: Int!
  baseAssetId: StringAggExp!
  derivativeAssetId: StringAggExp!
  id: StringAggExp!
}

input ADerivativeAssetsBoolExp {
  _and: [ADerivativeAssetsBoolExp!]
  _not: ADerivativeAssetsBoolExp
  _or: [ADerivativeAssetsBoolExp!]
  asset: AAssetsBoolExp
  assetByBaseAssetId: AAssetsBoolExp
  baseAssetId: StringBoolExp
  derivativeAssetId: StringBoolExp
  id: StringBoolExp
}

input ADerivativeAssetsFilterInput {
  limit: Int
  offset: Int
  order_by: [ADerivativeAssetsOrderBy!]
  where: ADerivativeAssetsBoolExp
}

input ADerivativeAssetsOrderBy {
  asset: AAssetsOrderBy
  assetByBaseAssetId: AAssetsOrderBy
  baseAssetId: OrderBy
  derivativeAssetId: OrderBy
  id: OrderBy
}

type AEntities {
  address: String1!
  country: ACountries
  countryId: String1
  dateOfIncorporation: Date
  entityType: AEntityTypes
  entityTypeId: String1
  id: String1!
  leiNumber: String1!
  localRegistrationNumber: String1!
  name: String1!
  root: ARoots
  rootId: String1!
  taxIdentificationNumber: String1!
  tradeName: String1!
  urls(
    limit: Int
    offset: Int
    order_by: [EntityUrlsOrderBy!]
    where: EntityUrlsBoolExp
  ): [EntityUrls!]
}

type AEntitiesAggExp {
  _count: Int!
  address: StringAggExp!
  countryId: StringAggExp!
  dateOfIncorporation: DateAggExp!
  entityTypeId: StringAggExp!
  id: StringAggExp!
  leiNumber: StringAggExp!
  localRegistrationNumber: StringAggExp!
  name: StringAggExp!
  rootId: StringAggExp!
  taxIdentificationNumber: StringAggExp!
  tradeName: StringAggExp!
}

input AEntitiesBoolExp {
  _and: [AEntitiesBoolExp!]
  _not: AEntitiesBoolExp
  _or: [AEntitiesBoolExp!]
  address: StringBoolExp
  country: ACountriesBoolExp
  countryId: StringBoolExp
  dateOfIncorporation: DateBoolExp
  entityType: AEntityTypesBoolExp
  entityTypeId: StringBoolExp
  id: StringBoolExp
  leiNumber: StringBoolExp
  localRegistrationNumber: StringBoolExp
  name: StringBoolExp
  root: ARootsBoolExp
  rootId: StringBoolExp
  taxIdentificationNumber: StringBoolExp
  tradeName: StringBoolExp
}

input AEntitiesFilterInput {
  limit: Int
  offset: Int
  order_by: [AEntitiesOrderBy!]
  where: AEntitiesBoolExp
}

input AEntitiesOrderBy {
  address: OrderBy
  country: ACountriesOrderBy
  countryId: OrderBy
  dateOfIncorporation: OrderBy
  entityType: AEntityTypesOrderBy
  entityTypeId: OrderBy
  id: OrderBy
  leiNumber: OrderBy
  localRegistrationNumber: OrderBy
  name: OrderBy
  root: ARootsOrderBy
  rootId: OrderBy
  taxIdentificationNumber: OrderBy
  tradeName: OrderBy
}

type AEntityTypes {
  definition: String1!
  entities(
    limit: Int
    offset: Int
    order_by: [AEntitiesOrderBy!]
    where: AEntitiesBoolExp
  ): [AEntities!]
  entitiesAggregate(filter_input: AEntitiesFilterInput): AEntitiesAggExp!
  id: String1!
  name: String1!
}

type AEntityTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AEntityTypesBoolExp {
  _and: [AEntityTypesBoolExp!]
  _not: AEntityTypesBoolExp
  _or: [AEntityTypesBoolExp!]
  definition: StringBoolExp
  entities: AEntitiesBoolExp
  id: StringBoolExp
  name: StringBoolExp
}

input AEntityTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [AEntityTypesOrderBy!]
  where: AEntityTypesBoolExp
}

input AEntityTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AProductAssetRelationships {
  asset: AAssets
  assetId: String1!
  assetSupportType: AAssetSupportTypes
  id: String1!
  product: AProducts
  productId: String1!
  typeOfSupportId: String1
}

type AProductAssetRelationshipsAggExp {
  _count: Int!
  assetId: StringAggExp!
  id: StringAggExp!
  productId: StringAggExp!
  typeOfSupportId: StringAggExp!
}

input AProductAssetRelationshipsBoolExp {
  _and: [AProductAssetRelationshipsBoolExp!]
  _not: AProductAssetRelationshipsBoolExp
  _or: [AProductAssetRelationshipsBoolExp!]
  asset: AAssetsBoolExp
  assetId: StringBoolExp
  assetSupportType: AAssetSupportTypesBoolExp
  id: StringBoolExp
  product: AProductsBoolExp
  productId: StringBoolExp
  typeOfSupportId: StringBoolExp
}

input AProductAssetRelationshipsFilterInput {
  limit: Int
  offset: Int
  order_by: [AProductAssetRelationshipsOrderBy!]
  where: AProductAssetRelationshipsBoolExp
}

input AProductAssetRelationshipsOrderBy {
  asset: AAssetsOrderBy
  assetId: OrderBy
  assetSupportType: AAssetSupportTypesOrderBy
  id: OrderBy
  product: AProductsOrderBy
  productId: OrderBy
  typeOfSupportId: OrderBy
}

type AProductDeployments {
  deploymentId: String1!
  id: String1!
  product: AProducts
  productId: String1!
  smartContractDeployment: ASmartContractDeployments
}

type AProductDeploymentsAggExp {
  _count: Int!
  deploymentId: StringAggExp!
  id: StringAggExp!
  productId: StringAggExp!
}

input AProductDeploymentsBoolExp {
  _and: [AProductDeploymentsBoolExp!]
  _not: AProductDeploymentsBoolExp
  _or: [AProductDeploymentsBoolExp!]
  deploymentId: StringBoolExp
  id: StringBoolExp
  product: AProductsBoolExp
  productId: StringBoolExp
  smartContractDeployment: ASmartContractDeploymentsBoolExp
}

input AProductDeploymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [AProductDeploymentsOrderBy!]
  where: AProductDeploymentsBoolExp
}

input AProductDeploymentsOrderBy {
  deploymentId: OrderBy
  id: OrderBy
  product: AProductsOrderBy
  productId: OrderBy
  smartContractDeployment: ASmartContractDeploymentsOrderBy
}

type AProductStatuses {
  definition: String1!
  id: String1!
  name: String1!
  products(
    limit: Int
    offset: Int
    order_by: [AProductsOrderBy!]
    where: AProductsBoolExp
  ): [AProducts!]
  productsAggregate(filter_input: AProductsFilterInput): AProductsAggExp!
}

type AProductStatusesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AProductStatusesBoolExp {
  _and: [AProductStatusesBoolExp!]
  _not: AProductStatusesBoolExp
  _or: [AProductStatusesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  products: AProductsBoolExp
}

input AProductStatusesFilterInput {
  limit: Int
  offset: Int
  order_by: [AProductStatusesOrderBy!]
  where: AProductStatusesBoolExp
}

input AProductStatusesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AProductTypes {
  definition: String1!
  id: String1!
  name: String1!
  products(
    limit: Int
    offset: Int
    order_by: [AProductsOrderBy!]
    where: AProductsBoolExp
  ): [AProducts!]
  productsAggregate(filter_input: AProductsFilterInput): AProductsAggExp!
}

type AProductTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AProductTypesBoolExp {
  _and: [AProductTypesBoolExp!]
  _not: AProductTypesBoolExp
  _or: [AProductTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  products: AProductsBoolExp
}

input AProductTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [AProductTypesOrderBy!]
  where: AProductTypesBoolExp
}

input AProductTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AProducts {
  description: String1!
  id: String1!
  isMainProduct: Int1
  launchDate: Date
  name: String1!
  productAssetRelationships(
    limit: Int
    offset: Int
    order_by: [AProductAssetRelationshipsOrderBy!]
    where: AProductAssetRelationshipsBoolExp
  ): [AProductAssetRelationships!]
  productAssetRelationshipsAggregate(
    filter_input: AProductAssetRelationshipsFilterInput
  ): AProductAssetRelationshipsAggExp!
  productDeployments(
    limit: Int
    offset: Int
    order_by: [AProductDeploymentsOrderBy!]
    where: AProductDeploymentsBoolExp
  ): [AProductDeployments!]
  productDeploymentsAggregate(
    filter_input: AProductDeploymentsFilterInput
  ): AProductDeploymentsAggExp!
  productStatus: AProductStatuses
  productStatusId: String1
  productType: AProductTypes
  productTypeId: String1
  root: ARoots
  rootId: String1!
  supportsProducts(
    limit: Int
    offset: Int
    order_by: [ASupportsProductsOrderBy!]
    where: ASupportsProductsBoolExp
  ): [ASupportsProducts!]
  supportsProductsAggregate(
    filter_input: ASupportsProductsFilterInput
  ): ASupportsProductsAggExp!
  supportsProductsBySupportsProductId(
    limit: Int
    offset: Int
    order_by: [ASupportsProductsOrderBy!]
    where: ASupportsProductsBoolExp
  ): [ASupportsProducts!]
  supportsProductsBySupportsProductIdAggregate(
    filter_input: ASupportsProductsFilterInput
  ): ASupportsProductsAggExp!
  urls(
    limit: Int
    offset: Int
    order_by: [ProductUrlsOrderBy!]
    where: ProductUrlsBoolExp
  ): [ProductUrls!]
}

type AProductsAggExp {
  _count: Int!
  description: StringAggExp!
  id: StringAggExp!
  isMainProduct: IntAggExp!
  launchDate: DateAggExp!
  name: StringAggExp!
  productStatusId: StringAggExp!
  productTypeId: StringAggExp!
  rootId: StringAggExp!
}

input AProductsBoolExp {
  _and: [AProductsBoolExp!]
  _not: AProductsBoolExp
  _or: [AProductsBoolExp!]
  description: StringBoolExp
  id: StringBoolExp
  isMainProduct: IntBoolExp
  launchDate: DateBoolExp
  name: StringBoolExp
  productAssetRelationships: AProductAssetRelationshipsBoolExp
  productDeployments: AProductDeploymentsBoolExp
  productStatus: AProductStatusesBoolExp
  productStatusId: StringBoolExp
  productType: AProductTypesBoolExp
  productTypeId: StringBoolExp
  root: ARootsBoolExp
  rootId: StringBoolExp
  supportsProducts: ASupportsProductsBoolExp
  supportsProductsBySupportsProductId: ASupportsProductsBoolExp
}

input AProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [AProductsOrderBy!]
  where: AProductsBoolExp
}

input AProductsOrderBy {
  description: OrderBy
  id: OrderBy
  isMainProduct: OrderBy
  launchDate: OrderBy
  name: OrderBy
  productStatus: AProductStatusesOrderBy
  productStatusId: OrderBy
  productType: AProductTypesOrderBy
  productTypeId: OrderBy
  root: ARootsOrderBy
  rootId: OrderBy
}

type AProfileInfos {
  descriptionLong: String1!
  descriptionShort: String1!
  foundingDate: Date
  id: String1!
  logo: String1
  name: String1!
  profileSector: AProfileSectors
  profileSectorId: String1
  profileStatus: AProfileStatuses
  profileStatusId: String1
  profileType: AProfileTypes
  profileTypeId: String1
  root: ARoots
  rootId: String1!
  """
  Self promotion field
  """
  tagLine: String1!
  urls(
    limit: Int
    offset: Int
    order_by: [ProfileInfoUrlsOrderBy!]
    where: ProfileInfoUrlsBoolExp
  ): [ProfileInfoUrls!]
}

type AProfileInfosAggExp {
  _count: Int!
  descriptionLong: StringAggExp!
  descriptionShort: StringAggExp!
  foundingDate: DateAggExp!
  id: StringAggExp!
  logo: StringAggExp!
  name: StringAggExp!
  profileSectorId: StringAggExp!
  profileStatusId: StringAggExp!
  profileTypeId: StringAggExp!
  rootId: StringAggExp!
  tagLine: StringAggExp!
}

input AProfileInfosBoolExp {
  _and: [AProfileInfosBoolExp!]
  _not: AProfileInfosBoolExp
  _or: [AProfileInfosBoolExp!]
  descriptionLong: StringBoolExp
  descriptionShort: StringBoolExp
  foundingDate: DateBoolExp
  id: StringBoolExp
  logo: StringBoolExp
  name: StringBoolExp
  profileSector: AProfileSectorsBoolExp
  profileSectorId: StringBoolExp
  profileStatus: AProfileStatusesBoolExp
  profileStatusId: StringBoolExp
  profileType: AProfileTypesBoolExp
  profileTypeId: StringBoolExp
  root: ARootsBoolExp
  rootId: StringBoolExp
  tagLine: StringBoolExp
}

input AProfileInfosFilterInput {
  limit: Int
  offset: Int
  order_by: [AProfileInfosOrderBy!]
  where: AProfileInfosBoolExp
}

input AProfileInfosOrderBy {
  descriptionLong: OrderBy
  descriptionShort: OrderBy
  foundingDate: OrderBy
  id: OrderBy
  logo: OrderBy
  name: OrderBy
  profileSector: AProfileSectorsOrderBy
  profileSectorId: OrderBy
  profileStatus: AProfileStatusesOrderBy
  profileStatusId: OrderBy
  profileType: AProfileTypesOrderBy
  profileTypeId: OrderBy
  root: ARootsOrderBy
  rootId: OrderBy
  tagLine: OrderBy
}

type AProfileSectors {
  definition: String1!
  id: String1!
  name: String1!
  profileInfos(
    limit: Int
    offset: Int
    order_by: [AProfileInfosOrderBy!]
    where: AProfileInfosBoolExp
  ): [AProfileInfos!]
  profileInfosAggregate(
    filter_input: AProfileInfosFilterInput
  ): AProfileInfosAggExp!
}

type AProfileSectorsAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AProfileSectorsBoolExp {
  _and: [AProfileSectorsBoolExp!]
  _not: AProfileSectorsBoolExp
  _or: [AProfileSectorsBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  profileInfos: AProfileInfosBoolExp
}

input AProfileSectorsFilterInput {
  limit: Int
  offset: Int
  order_by: [AProfileSectorsOrderBy!]
  where: AProfileSectorsBoolExp
}

input AProfileSectorsOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AProfileStatuses {
  definition: String1!
  id: String1!
  name: String1!
  profileInfos(
    limit: Int
    offset: Int
    order_by: [AProfileInfosOrderBy!]
    where: AProfileInfosBoolExp
  ): [AProfileInfos!]
  profileInfosAggregate(
    filter_input: AProfileInfosFilterInput
  ): AProfileInfosAggExp!
}

type AProfileStatusesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AProfileStatusesBoolExp {
  _and: [AProfileStatusesBoolExp!]
  _not: AProfileStatusesBoolExp
  _or: [AProfileStatusesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  profileInfos: AProfileInfosBoolExp
}

input AProfileStatusesFilterInput {
  limit: Int
  offset: Int
  order_by: [AProfileStatusesOrderBy!]
  where: AProfileStatusesBoolExp
}

input AProfileStatusesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

"""
"""
type AProfileTags {
  id: String1!
  root: ARoots
  rootId: String1!
  tag: ATags
  tagId: String1!
}

type AProfileTagsAggExp {
  _count: Int!
  id: StringAggExp!
  rootId: StringAggExp!
  tagId: StringAggExp!
}

input AProfileTagsBoolExp {
  _and: [AProfileTagsBoolExp!]
  _not: AProfileTagsBoolExp
  _or: [AProfileTagsBoolExp!]
  id: StringBoolExp
  root: ARootsBoolExp
  rootId: StringBoolExp
  tag: ATagsBoolExp
  tagId: StringBoolExp
}

input AProfileTagsFilterInput {
  limit: Int
  offset: Int
  order_by: [AProfileTagsOrderBy!]
  where: AProfileTagsBoolExp
}

input AProfileTagsOrderBy {
  id: OrderBy
  root: ARootsOrderBy
  rootId: OrderBy
  tag: ATagsOrderBy
  tagId: OrderBy
}

type AProfileTypes {
  definition: String1!
  id: String1!
  name: String1!
  profileInfos(
    limit: Int
    offset: Int
    order_by: [AProfileInfosOrderBy!]
    where: AProfileInfosBoolExp
  ): [AProfileInfos!]
  profileInfosAggregate(
    filter_input: AProfileInfosFilterInput
  ): AProfileInfosAggExp!
}

type AProfileTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AProfileTypesBoolExp {
  _and: [AProfileTypesBoolExp!]
  _not: AProfileTypesBoolExp
  _or: [AProfileTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  profileInfos: AProfileInfosBoolExp
}

input AProfileTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [AProfileTypesOrderBy!]
  where: AProfileTypesBoolExp
}

input AProfileTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type ARoots {
  assets(
    limit: Int
    offset: Int
    order_by: [AAssetsOrderBy!]
    where: AAssetsBoolExp
  ): [AAssets!]
  assetsAggregate(filter_input: AAssetsFilterInput): AAssetsAggExp!
  entities(
    limit: Int
    offset: Int
    order_by: [AEntitiesOrderBy!]
    where: AEntitiesBoolExp
  ): [AEntities!]
  entitiesAggregate(filter_input: AEntitiesFilterInput): AEntitiesAggExp!
  id: String1!
  products(
    limit: Int
    offset: Int
    order_by: [AProductsOrderBy!]
    where: AProductsBoolExp
  ): [AProducts!]
  productsAggregate(filter_input: AProductsFilterInput): AProductsAggExp!
  profileInfos(
    limit: Int
    offset: Int
    order_by: [AProfileInfosOrderBy!]
    where: AProfileInfosBoolExp
  ): [AProfileInfos!]
  profileInfosAggregate(
    filter_input: AProfileInfosFilterInput
  ): AProfileInfosAggExp!
  profileTags(
    limit: Int
    offset: Int
    order_by: [AProfileTagsOrderBy!]
    where: AProfileTagsBoolExp
  ): [AProfileTags!]
  profileTagsAggregate(
    filter_input: AProfileTagsFilterInput
  ): AProfileTagsAggExp!
  slug: String1!
  socials(
    limit: Int
    offset: Int
    order_by: [ASocialsOrderBy!]
    where: ASocialsBoolExp
  ): [ASocials!]
  socialsAggregate(filter_input: ASocialsFilterInput): ASocialsAggExp!
  urlMain: String1!
}

type ARootsAggExp {
  _count: Int!
  id: StringAggExp!
  slug: StringAggExp!
  urlMain: StringAggExp!
}

input ARootsBoolExp {
  _and: [ARootsBoolExp!]
  _not: ARootsBoolExp
  _or: [ARootsBoolExp!]
  assets: AAssetsBoolExp
  entities: AEntitiesBoolExp
  id: StringBoolExp
  products: AProductsBoolExp
  profileInfos: AProfileInfosBoolExp
  profileTags: AProfileTagsBoolExp
  slug: StringBoolExp
  socials: ASocialsBoolExp
  urlMain: StringBoolExp
}

input ARootsFilterInput {
  limit: Int
  offset: Int
  order_by: [ARootsOrderBy!]
  where: ARootsBoolExp
}

input ARootsOrderBy {
  id: OrderBy
  slug: OrderBy
  urlMain: OrderBy
}

type ASmartContractDeployments {
  assetDeployments(
    limit: Int
    offset: Int
    order_by: [AAssetDeploymentsOrderBy!]
    where: AAssetDeploymentsBoolExp
  ): [AAssetDeployments!]
  assetDeploymentsAggregate(
    filter_input: AAssetDeploymentsFilterInput
  ): assetDeploymentsAggExp!
  assetStandard: AAssetStandards
  deployedOnId: String1
  deployedOnProduct: AProducts
  deploymentType: ADeploymentTypes
  deploymentTypeId: String1
  id: String1!
  isOfStandardId: String1
  productDeployments(
    limit: Int
    offset: Int
    order_by: [AProductDeploymentsOrderBy!]
    where: AProductDeploymentsBoolExp
  ): [AProductDeployments!]
  productDeploymentsAggregate(
    filter_input: AProductDeploymentsFilterInput
  ): AProductDeploymentsAggExp!
  smartContracts(
    limit: Int
    offset: Int
    order_by: [ASmartContractsOrderBy!]
    where: ASmartContractsBoolExp
  ): [ASmartContracts!]
  smartContractsAggregate(
    filter_input: ASmartContractsFilterInput
  ): ASmartContractsAggExp!
}

type ASmartContractDeploymentsAggExp {
  _count: Int!
  deployedOnId: StringAggExp!
  deploymentTypeId: StringAggExp!
  id: StringAggExp!
  isOfStandardId: StringAggExp!
}

input ASmartContractDeploymentsBoolExp {
  _and: [ASmartContractDeploymentsBoolExp!]
  _not: ASmartContractDeploymentsBoolExp
  _or: [ASmartContractDeploymentsBoolExp!]
  assetDeployments: AAssetDeploymentsBoolExp
  assetStandard: AAssetStandardsBoolExp
  deployedOnId: StringBoolExp
  deployedOnProduct: AProductsBoolExp
  deploymentType: ADeploymentTypesBoolExp
  deploymentTypeId: StringBoolExp
  id: StringBoolExp
  isOfStandardId: StringBoolExp
  productDeployments: AProductDeploymentsBoolExp
  smartContracts: ASmartContractsBoolExp
}

input ASmartContractDeploymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ASmartContractDeploymentsOrderBy!]
  where: ASmartContractDeploymentsBoolExp
}

input ASmartContractDeploymentsOrderBy {
  assetStandard: AAssetStandardsOrderBy
  deployedOnId: OrderBy
  deployedOnProduct: AProductsOrderBy
  deploymentType: ADeploymentTypesOrderBy
  deploymentTypeId: OrderBy
  id: OrderBy
  isOfStandardId: OrderBy
}

type ASmartContracts {
  address: String1!
  deploymentDate: Date
  deploymentId: String1
  id: String1!
  name: String1!
  smartContractDeployment: ASmartContractDeployments
}

type ASmartContractsAggExp {
  _count: Int!
  address: StringAggExp!
  deploymentDate: DateAggExp!
  deploymentId: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ASmartContractsBoolExp {
  _and: [ASmartContractsBoolExp!]
  _not: ASmartContractsBoolExp
  _or: [ASmartContractsBoolExp!]
  address: StringBoolExp
  deploymentDate: DateBoolExp
  deploymentId: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  smartContractDeployment: ASmartContractDeploymentsBoolExp
}

input ASmartContractsFilterInput {
  limit: Int
  offset: Int
  order_by: [ASmartContractsOrderBy!]
  where: ASmartContractsBoolExp
}

input ASmartContractsOrderBy {
  address: OrderBy
  deploymentDate: OrderBy
  deploymentId: OrderBy
  id: OrderBy
  name: OrderBy
  smartContractDeployment: ASmartContractDeploymentsOrderBy
}

type ASocialTypes {
  definition: String1!
  id: String1!
  name: String1!
  socials(
    limit: Int
    offset: Int
    order_by: [ASocialsOrderBy!]
    where: ASocialsBoolExp
  ): [ASocials!]
  socialsAggregate(filter_input: ASocialsFilterInput): ASocialsAggExp!
}

type ASocialTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ASocialTypesBoolExp {
  _and: [ASocialTypesBoolExp!]
  _not: ASocialTypesBoolExp
  _or: [ASocialTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  socials: ASocialsBoolExp
}

input ASocialTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [ASocialTypesOrderBy!]
  where: ASocialTypesBoolExp
}

input ASocialTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type ASocials {
  id: String1!
  name: String1!
  root: ARoots
  rootId: String1!
  socialType: ASocialTypes
  socialTypeId: String1
  urls(
    limit: Int
    offset: Int
    order_by: [SocialUrlsOrderBy!]
    where: SocialUrlsBoolExp
  ): [SocialUrls!]
}

type ASocialsAggExp {
  _count: Int!
  id: StringAggExp!
  name: StringAggExp!
  rootId: StringAggExp!
  socialTypeId: StringAggExp!
}

input ASocialsBoolExp {
  _and: [ASocialsBoolExp!]
  _not: ASocialsBoolExp
  _or: [ASocialsBoolExp!]
  id: StringBoolExp
  name: StringBoolExp
  root: ARootsBoolExp
  rootId: StringBoolExp
  socialType: ASocialTypesBoolExp
  socialTypeId: StringBoolExp
}

input ASocialsFilterInput {
  limit: Int
  offset: Int
  order_by: [ASocialsOrderBy!]
  where: ASocialsBoolExp
}

input ASocialsOrderBy {
  id: OrderBy
  name: OrderBy
  root: ARootsOrderBy
  rootId: OrderBy
  socialType: ASocialTypesOrderBy
  socialTypeId: OrderBy
}

"""
Table mapping product support relationships
"""
type ASupportsProducts {
  id: String1!
  product: AProducts
  productId: String1!
  supportsProduct: AProducts
  supportsProductId: String1!
}

type ASupportsProductsAggExp {
  _count: Int!
  id: StringAggExp!
  productId: StringAggExp!
  supportsProductId: StringAggExp!
}

input ASupportsProductsBoolExp {
  _and: [ASupportsProductsBoolExp!]
  _not: ASupportsProductsBoolExp
  _or: [ASupportsProductsBoolExp!]
  id: StringBoolExp
  product: AProductsBoolExp
  productId: StringBoolExp
  supportsProduct: AProductsBoolExp
  supportsProductId: StringBoolExp
}

input ASupportsProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [ASupportsProductsOrderBy!]
  where: ASupportsProductsBoolExp
}

input ASupportsProductsOrderBy {
  id: OrderBy
  product: AProductsOrderBy
  productId: OrderBy
  supportsProduct: AProductsOrderBy
  supportsProductId: OrderBy
}

type ATagTypes {
  definition: String1!
  id: String1!
  name: String1!
  tags(
    limit: Int
    offset: Int
    order_by: [ATagsOrderBy!]
    where: ATagsBoolExp
  ): [ATags!]
  tagsAggregate(filter_input: ATagsFilterInput): ATagsAggExp!
}

type ATagTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ATagTypesBoolExp {
  _and: [ATagTypesBoolExp!]
  _not: ATagTypesBoolExp
  _or: [ATagTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  tags: ATagsBoolExp
}

input ATagTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [ATagTypesOrderBy!]
  where: ATagTypesBoolExp
}

input ATagTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type ATags {
  description: String1!
  id: String1!
  name: String1!
  profileTags(
    limit: Int
    offset: Int
    order_by: [AProfileTagsOrderBy!]
    where: AProfileTagsBoolExp
  ): [AProfileTags!]
  profileTagsAggregate(
    filter_input: AProfileTagsFilterInput
  ): AProfileTagsAggExp!
  tagType: ATagTypes
  tagTypeId: String1
}

type ATagsAggExp {
  _count: Int!
  description: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
  tagTypeId: StringAggExp!
}

input ATagsBoolExp {
  _and: [ATagsBoolExp!]
  _not: ATagsBoolExp
  _or: [ATagsBoolExp!]
  description: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  profileTags: AProfileTagsBoolExp
  tagType: ATagTypesBoolExp
  tagTypeId: StringBoolExp
}

input ATagsFilterInput {
  limit: Int
  offset: Int
  order_by: [ATagsOrderBy!]
  where: ATagsBoolExp
}

input ATagsOrderBy {
  description: OrderBy
  id: OrderBy
  name: OrderBy
  tagType: ATagTypesOrderBy
  tagTypeId: OrderBy
}

type AUrlTypes {
  definition: String1!
  id: String1!
  name: String1!
  urls(
    limit: Int
    offset: Int
    order_by: [AUrlsOrderBy!]
    where: AUrlsBoolExp
  ): [AUrls!]
  urlsAggregate(filter_input: AUrlsFilterInput): AUrlsAggExp!
}

type AUrlTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AUrlTypesBoolExp {
  _and: [AUrlTypesBoolExp!]
  _not: AUrlTypesBoolExp
  _or: [AUrlTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  urls: AUrlsBoolExp
}

input AUrlTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [AUrlTypesOrderBy!]
  where: AUrlTypesBoolExp
}

input AUrlTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AUrls {
  coreTableName: ACoreTableNames
  id: String1!
  rowId: String1!
  tableId: String1!
  url: String1!
  urlType: AUrlTypes
  urlTypeId: String1
}

type AUrlsAggExp {
  _count: Int!
  id: StringAggExp!
  rowId: StringAggExp!
  tableId: StringAggExp!
  url: StringAggExp!
  urlTypeId: StringAggExp!
}

input AUrlsBoolExp {
  _and: [AUrlsBoolExp!]
  _not: AUrlsBoolExp
  _or: [AUrlsBoolExp!]
  coreTableName: ACoreTableNamesBoolExp
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: AUrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input AUrlsFilterInput {
  limit: Int
  offset: Int
  order_by: [AUrlsOrderBy!]
  where: AUrlsBoolExp
}

input AUrlsOrderBy {
  coreTableName: ACoreTableNamesOrderBy
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: AUrlTypesOrderBy
  urlTypeId: OrderBy
}

type AssetUrls {
  id: String1!
  rowId: String1!
  tableId: String1!
  url: String1!
  urlType: AUrlTypes
  urlTypeId: String1!
}

input AssetUrlsBoolExp {
  _and: [AssetUrlsBoolExp!]
  _not: AssetUrlsBoolExp
  _or: [AssetUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: AUrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input AssetUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: AUrlTypesOrderBy
  urlTypeId: OrderBy
}

scalar Date

type DateAggExp {
  _count: Int!
  _count_distinct: Int!
}

input DateBoolExp {
  _eq: Date
  _gt: Date
  _gte: Date
  _in: [Date!]
  _is_null: Boolean
  _lt: Date
  _lte: Date
}

type EntityUrls {
  id: String1!
  rowId: String1!
  tableId: String1!
  url: String1!
  urlType: AUrlTypes
  urlTypeId: String1!
}

input EntityUrlsBoolExp {
  _and: [EntityUrlsBoolExp!]
  _not: EntityUrlsBoolExp
  _or: [EntityUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: AUrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input EntityUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: AUrlTypesOrderBy
  urlTypeId: OrderBy
}

scalar Float1

scalar Int1

type IntAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: Float1!
  count: Int1!
  max: Int1!
  min: Int1!
  stddev_pop: Float1!
  stddev_samp: Float1!
  sum: Int1!
  var_pop: Float1!
  var_samp: Float1!
}

input IntBoolExp {
  _eq: Int1
  _gt: Int1
  _gte: Int1
  _in: [Int1!]
  _is_null: Boolean
  _lt: Int1
  _lte: Int1
}

type Mutation {
  _no_fields_accessible: String
}

enum OrderBy {
  """
  Sorts the data in ascending order
  """
  Asc
  """
  Sorts the data in descending order
  """
  Desc
}

type ProductUrls {
  id: String1!
  rowId: String1!
  tableId: String1!
  url: String1!
  urlType: AUrlTypes
  urlTypeId: String1!
}

input ProductUrlsBoolExp {
  _and: [ProductUrlsBoolExp!]
  _not: ProductUrlsBoolExp
  _or: [ProductUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: AUrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input ProductUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: AUrlTypesOrderBy
  urlTypeId: OrderBy
}

type ProfileInfoUrls {
  id: String1!
  rowId: String1!
  tableId: String1!
  url: String1!
  urlType: AUrlTypes
  urlTypeId: String1!
}

input ProfileInfoUrlsBoolExp {
  _and: [ProfileInfoUrlsBoolExp!]
  _not: ProfileInfoUrlsBoolExp
  _or: [ProfileInfoUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: AUrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input ProfileInfoUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: AUrlTypesOrderBy
  urlTypeId: OrderBy
}

type Query {
  assetDeployments(
    limit: Int
    offset: Int
    order_by: [AAssetDeploymentsOrderBy!]
    where: AAssetDeploymentsBoolExp
  ): [AAssetDeployments!]
  assetDeploymentsAggregate(
    filter_input: AAssetDeploymentsFilterInput
  ): assetDeploymentsAggExp
  assetDeploymentsById(id: String1!): AAssetDeployments
  assetStandards(
    limit: Int
    offset: Int
    order_by: [AAssetStandardsOrderBy!]
    where: AAssetStandardsBoolExp
  ): [AAssetStandards!]
  assetStandardsAggregate(
    filter_input: AAssetStandardsFilterInput
  ): AAssetStandardsAggExp
  assetStandardsById(id: String1!): AAssetStandards
  assetStatuses(
    limit: Int
    offset: Int
    order_by: [AAssetStatusesOrderBy!]
    where: AAssetStatusesBoolExp
  ): [AAssetStatuses!]
  assetStatusesAggregate(
    filter_input: AAssetStatusesFilterInput
  ): AAssetStatusesAggExp
  assetStatusesById(id: String1!): AAssetStatuses
  assetSupportTypes(
    limit: Int
    offset: Int
    order_by: [AAssetSupportTypesOrderBy!]
    where: AAssetSupportTypesBoolExp
  ): [AAssetSupportTypes!]
  assetSupportTypesAggregate(
    filter_input: AAssetSupportTypesFilterInput
  ): AAssetSupportTypesAggExp
  assetSupportTypesById(id: String1!): AAssetSupportTypes
  assetTypes(
    limit: Int
    offset: Int
    order_by: [AAssetTypesOrderBy!]
    where: AAssetTypesBoolExp
  ): [AAssetTypes!]
  assetTypesAggregate(filter_input: AAssetTypesFilterInput): AAssetTypesAggExp
  assetTypesById(id: String1!): AAssetTypes
  assets(
    limit: Int
    offset: Int
    order_by: [AAssetsOrderBy!]
    where: AAssetsBoolExp
  ): [AAssets!]
  assetsAggregate(filter_input: AAssetsFilterInput): AAssetsAggExp
  assetsById(id: String1!): AAssets
  coreTableNames(
    limit: Int
    offset: Int
    order_by: [ACoreTableNamesOrderBy!]
    where: ACoreTableNamesBoolExp
  ): [ACoreTableNames!]
  coreTableNamesAggregate(
    filter_input: ACoreTableNamesFilterInput
  ): ACoreTableNamesAggExp
  coreTableNamesById(id: String1!): ACoreTableNames
  countries(
    limit: Int
    offset: Int
    order_by: [ACountriesOrderBy!]
    where: ACountriesBoolExp
  ): [ACountries!]
  countriesAggregate(filter_input: ACountriesFilterInput): ACountriesAggExp
  countriesById(id: String1!): ACountries
  ddeploymentTypes(
    limit: Int
    offset: Int
    order_by: [ADeploymentTypesOrderBy!]
    where: ADeploymentTypesBoolExp
  ): [ADeploymentTypes!]
  deploymentTypesAggregate(
    filter_input: ADeploymentTypesFilterInput
  ): ADeploymentTypesAggExp
  deploymentTypesById(id: String1!): ADeploymentTypes
  derivativeAssets(
    limit: Int
    offset: Int
    order_by: [ADerivativeAssetsOrderBy!]
    where: ADerivativeAssetsBoolExp
  ): [ADerivativeAssets!]
  derivativeAssetsAggregate(
    filter_input: ADerivativeAssetsFilterInput
  ): ADerivativeAssetsAggExp
  derivativeAssetsById(id: String1!): ADerivativeAssets
  entities(
    limit: Int
    offset: Int
    order_by: [AEntitiesOrderBy!]
    where: AEntitiesBoolExp
  ): [AEntities!]
  entitiesAggregate(filter_input: AEntitiesFilterInput): AEntitiesAggExp
  entitiesById(id: String1!): AEntities
  entityTypes(
    limit: Int
    offset: Int
    order_by: [AEntityTypesOrderBy!]
    where: AEntityTypesBoolExp
  ): [AEntityTypes!]
  entityTypesAggregate(
    filter_input: AEntityTypesFilterInput
  ): AEntityTypesAggExp
  entityTypesById(id: String1!): AEntityTypes
  productAssetRelationships(
    limit: Int
    offset: Int
    order_by: [AProductAssetRelationshipsOrderBy!]
    where: AProductAssetRelationshipsBoolExp
  ): [AProductAssetRelationships!]
  productAssetRelationshipsAggregate(
    filter_input: AProductAssetRelationshipsFilterInput
  ): AProductAssetRelationshipsAggExp
  productAssetRelationshipsById(id: String1!): AProductAssetRelationships
  productDeployments(
    limit: Int
    offset: Int
    order_by: [AProductDeploymentsOrderBy!]
    where: AProductDeploymentsBoolExp
  ): [AProductDeployments!]
  productDeploymentsAggregate(
    filter_input: AProductDeploymentsFilterInput
  ): AProductDeploymentsAggExp
  productDeploymentsById(id: String1!): AProductDeployments
  productStatuses(
    limit: Int
    offset: Int
    order_by: [AProductStatusesOrderBy!]
    where: AProductStatusesBoolExp
  ): [AProductStatuses!]
  productStatusesAggregate(
    filter_input: AProductStatusesFilterInput
  ): AProductStatusesAggExp
  productStatusesById(id: String1!): AProductStatuses
  productTypes(
    limit: Int
    offset: Int
    order_by: [AProductTypesOrderBy!]
    where: AProductTypesBoolExp
  ): [AProductTypes!]
  productTypesAggregate(
    filter_input: AProductTypesFilterInput
  ): AProductTypesAggExp
  productTypesById(id: String1!): AProductTypes
  products(
    limit: Int
    offset: Int
    order_by: [AProductsOrderBy!]
    where: AProductsBoolExp
  ): [AProducts!]
  productsAggregate(filter_input: AProductsFilterInput): AProductsAggExp
  productsById(id: String1!): AProducts
  profileInfos(
    limit: Int
    offset: Int
    order_by: [AProfileInfosOrderBy!]
    where: AProfileInfosBoolExp
  ): [AProfileInfos!]
  profileInfosAggregate(
    filter_input: AProfileInfosFilterInput
  ): AProfileInfosAggExp
  profileInfosById(id: String1!): AProfileInfos
  profileSectors(
    limit: Int
    offset: Int
    order_by: [AProfileSectorsOrderBy!]
    where: AProfileSectorsBoolExp
  ): [AProfileSectors!]
  profileSectorsAggregate(
    filter_input: AProfileSectorsFilterInput
  ): AProfileSectorsAggExp
  profileSectorsById(id: String1!): AProfileSectors
  profileStatuses(
    limit: Int
    offset: Int
    order_by: [AProfileStatusesOrderBy!]
    where: AProfileStatusesBoolExp
  ): [AProfileStatuses!]
  profileStatusesAggregate(
    filter_input: AProfileStatusesFilterInput
  ): AProfileStatusesAggExp
  profileStatusesById(id: String1!): AProfileStatuses
  """
  Selects multiple objects from the model. Model description:
  """
  profileTags(
    limit: Int
    offset: Int
    order_by: [AProfileTagsOrderBy!]
    where: AProfileTagsBoolExp
  ): [AProfileTags!]
  profileTagsAggregate(
    filter_input: AProfileTagsFilterInput
  ): AProfileTagsAggExp
  """
  Selects a single object from the model. Model description:
  """
  profileTagsById(id: String1!): AProfileTags
  profileTypes(
    limit: Int
    offset: Int
    order_by: [AProfileTypesOrderBy!]
    where: AProfileTypesBoolExp
  ): [AProfileTypes!]
  profileTypesAggregate(
    filter_input: AProfileTypesFilterInput
  ): AProfileTypesAggExp
  profileTypesById(id: String1!): AProfileTypes
  roots(
    limit: Int
    offset: Int
    order_by: [ARootsOrderBy!]
    where: ARootsBoolExp
  ): [ARoots!]
  rootsAggregate(filter_input: ARootsFilterInput): ARootsAggExp
  rootsById(id: String1!): ARoots
  smartContractDeployments(
    limit: Int
    offset: Int
    order_by: [ASmartContractDeploymentsOrderBy!]
    where: ASmartContractDeploymentsBoolExp
  ): [ASmartContractDeployments!]
  smartContractDeploymentsAggregate(
    filter_input: ASmartContractDeploymentsFilterInput
  ): ASmartContractDeploymentsAggExp
  smartContractDeploymentsById(id: String1!): ASmartContractDeployments
  smartContracts(
    limit: Int
    offset: Int
    order_by: [ASmartContractsOrderBy!]
    where: ASmartContractsBoolExp
  ): [ASmartContracts!]
  smartContractsAggregate(
    filter_input: ASmartContractsFilterInput
  ): ASmartContractsAggExp
  smartContractsById(id: String1!): ASmartContracts
  socialTypes(
    limit: Int
    offset: Int
    order_by: [ASocialTypesOrderBy!]
    where: ASocialTypesBoolExp
  ): [ASocialTypes!]
  socialTypesAggregate(
    filter_input: ASocialTypesFilterInput
  ): ASocialTypesAggExp
  socialTypesById(id: String1!): ASocialTypes
  socials(
    limit: Int
    offset: Int
    order_by: [ASocialsOrderBy!]
    where: ASocialsBoolExp
  ): [ASocials!]
  socialsAggregate(filter_input: ASocialsFilterInput): ASocialsAggExp
  """
  Selects multiple objects from the model. Model description: Table mapping product support relationships
  """
  supportsProducts(
    limit: Int
    offset: Int
    order_by: [ASupportsProductsOrderBy!]
    where: ASupportsProductsBoolExp
  ): [ASupportsProducts!]
  supportsProductsAggregate(
    filter_input: ASupportsProductsFilterInput
  ): ASupportsProductsAggExp
  """
  Selects a single object from the model. Model description: Table mapping product support relationships
  """
  supportsProductsById(id: String1!): ASupportsProducts
  tagTypes(
    limit: Int
    offset: Int
    order_by: [ATagTypesOrderBy!]
    where: ATagTypesBoolExp
  ): [ATagTypes!]
  tagTypesAggregate(filter_input: ATagTypesFilterInput): ATagTypesAggExp
  tagTypesById(id: String1!): ATagTypes
  tags(
    limit: Int
    offset: Int
    order_by: [ATagsOrderBy!]
    where: ATagsBoolExp
  ): [ATags!]
  tagsAggregate(filter_input: ATagsFilterInput): ATagsAggExp
  tagsById(id: String1!): ATags
  urlTypes(
    limit: Int
    offset: Int
    order_by: [AUrlTypesOrderBy!]
    where: AUrlTypesBoolExp
  ): [AUrlTypes!]
  urlTypesAggregate(filter_input: AUrlTypesFilterInput): AUrlTypesAggExp
  urlTypesById(id: String1!): AUrlTypes
  urls(
    limit: Int
    offset: Int
    order_by: [AUrlsOrderBy!]
    where: AUrlsBoolExp
  ): [AUrls!]
  urlsAggregate(filter_input: AUrlsFilterInput): AUrlsAggExp
  urlsById(id: String1!): AUrls
}

type SocialUrls {
  id: String1
  rowId: String1
  tableId: String1
  url: String1
  urlType: AUrlTypes
  urlTypeId: String1
}

input SocialUrlsBoolExp {
  _and: [SocialUrlsBoolExp!]
  _not: SocialUrlsBoolExp
  _or: [SocialUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: AUrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input SocialUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: AUrlTypesOrderBy
  urlTypeId: OrderBy
}

scalar String1

type StringAggExp {
  _count: Int!
  _count_distinct: Int!
  max: String1!
  min: String1!
}

input StringBoolExp {
  _contains: String1
  _eq: String1
  _in: [String1!]
  _is_null: Boolean
  _like: String1
}

type assetDeploymentsAggExp {
  _count: Int!
  assetId: StringAggExp!
  deploymentId: StringAggExp!
  id: StringAggExp!
}
